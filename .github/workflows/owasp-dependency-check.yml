
name: Reusable OWASP Dependency-Check

on:
  workflow_call:  # Defines this workflow as reusable
    inputs:
      project_name:
        description: 'Project name for Dependency-Check'
        required: true
        type: string

jobs:
  depchecktest:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # - name: Build project with Maven
      #   run: mvn clean install
      
      # Step 2: Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x' # Set the .NET version based on your project

      # Step 3: Restore NuGet packages
      - name: Restore NuGet packages
        run: dotnet restore src/NopCommerce.sln

      # Step 4: Build the project
      - name: Build the project
        run: dotnet build src/NopCommerce.sln --configuration Release

      # Step 5: Run OWASP Dependency-Check

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: ${{ inputs.project_name }} 
          path: '.'
          format: 'HTML'
          out: 'reports'
          scanpath: '**/*.csproj'  # Scan the .csproj files for .NET dependencies
          args: >
            --failOnCVSS 7
            --enableRetired

      # Step 6: Upload the OWASP report as an artifact
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{ github.workspace }}/reports
