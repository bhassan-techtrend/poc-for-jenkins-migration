name: Reusable OWASP Dependency-Check

on:
  workflow_call:
    inputs:
      project_name:
        description: 'Project name for Dependency-Check'
        required: true
        type: string

jobs:
  depchecktest:
    runs-on: ubuntu-latest
    name: dependency_check_test
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2

      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'  # Set the .NET version based on your project

      # Find the .sln file dynamically
      - name: Find .sln file
        id: find-sln
        run: echo "::set-output name=sln_path::$(find . -name '*.sln' | head -n 1)"

      # Restore NuGet packages using the found .sln file
      - name: Restore NuGet packages
        run: dotnet restore ${{ steps.find-sln.outputs.sln_path }}

      # Build the project using the found .sln file
      - name: Build the project
        run: dotnet build ${{ steps.find-sln.outputs.sln_path }} --configuration Release

      # Run OWASP Dependency-Check
      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        id: depcheck
        with:
          project: ${{ inputs.project_name }}  # Use the project name passed as input
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      # Upload the OWASP report as an artifact
      - name: Upload OWASP Dependency-Check report
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{ github.workspace }}/reports

